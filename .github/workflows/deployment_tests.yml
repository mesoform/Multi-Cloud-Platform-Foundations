name: 'Deployment Tests'

on:
  push:
    branches:
      - main
      - develop

jobs:
  ############################# Deployment Tests for GCP modules #####################################################
  MCP-tests:
    runs-on: ubuntu-latest

    env:
      working-directory: ./tests/gcp/deployment
      DATE: $(date +%y%m%d%H%M)

    defaults:
      run:
        shell: bash
        working-directory: ${{env.working-directory}}

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      # Install the latest version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      # Install gcloud sdk and set the service account
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{secrets.GCP_SA_KEY}}
          export_default_credentials: true

      # Deploy google folders
      - name: Add IDs to GCP Folder Files
        env:
          GOOGLE_CREDENTIALS: ${{secrets.GCP_SA_KEY}}
        run: |
          cd google_folder/resource
          sed -i "s/<folder_id>/folders\/${{secrets.GCP_FOLDER_ID}}/" folders.yaml
          SERVICE_ACCOUNT=$(echo $GOOGLE_CREDENTIALS | jq -r '.client_email')
          sed -i "s/<service_account>/$SERVICE_ACCOUNT/"  folders.yaml
          cat folders.yaml

      - name: Deploy Google folder
        id: deploy-folders
        run: |
          cd google_folder
          terraform init
          terraform plan -out="./plan.tfplan"
          terraform apply plan.tfplan

      - name: Destroy Google Folders
        if: steps.deploy-folders.outcome != 'skipped'
        run: |
          cd google_folder
          terraform destroy -auto-approve
      

      # Deploy google projects
      - name: Add IDs to GCP Project Files
        env:
          GOOGLE_CREDENTIALS: ${{secrets.GCP_SA_KEY}}
        run: |
          cd google_project/resource
          sed -i "s/<project_date>/${DATE}/g" projects.yaml
          sed -i "s/<folder_id>/folders\/${{secrets.GCP_FOLDER_ID}}/" projects.yaml
          sed -i "s/<billing_account>/${{secrets.GCP_BILLING_ACCOUNT}}/" projects.yaml
          SERVICE_ACCOUNT=$(echo $GOOGLE_CREDENTIALS | jq -r '.client_email')
          sed -i "s/<service_account>/${SERVICE_ACCOUNT}/"  projects.yaml
          cat projects.yaml

      - name: Deploy Google project
        id: deploy-projects
        run: |
          cd google_project
          terraform init
          terraform plan -out="./plan.tfplan"
          terraform apply plan.tfplan

      # Deploy google service accounts
      - name: Add IDs to GCP Service Accounts File
        env:
          GOOGLE_CREDENTIALS: ${{secrets.GCP_SA_KEY}}
        run: |
          cd google_service_account/resource
          sed -i "s/<project_id>/mcp-test-project-${DATE}/" service_accounts.yaml
          sed -i "s/<user_email>/${{secrets.GCP_USER}}/" service_accounts.yaml
          cat service_accounts.yaml

      - name: Deploy Google service accounts
        id: deploy-GSAs
        run: |
          cd google_service_account
          terraform init
          terraform plan -out="./plan.tfplan"
          terraform apply plan.tfplan

      - name: Destroy Google Service Accounts
        if: steps.deploy-GSAs.outcome != 'skipped'
        run: |
          cd google_service_account
          terraform destroy -auto-approve

      - name: Destroy Google Projects
        if: steps.deploy-projects.outcome != 'skipped'
        run: |
          cd google_project
          terraform destroy -auto-approve
